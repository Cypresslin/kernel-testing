#!/usr/bin/env python3
#

from argparse                           import ArgumentParser, RawDescriptionHelpFormatter
from logging                            import basicConfig, DEBUG, WARNING
from lib.log                            import center, cleave, Clog

from lib3.cloud                         import CloudJobFactory

if __name__ == '__main__':
    retval = -1

    # Command line argument setup and initial processing
    #
    app_description = '''
    '''
    app_epilog = '''
    '''
    parser = ArgumentParser(description=app_description, epilog=app_epilog, formatter_class=RawDescriptionHelpFormatter)
    parser.add_argument('--debug', action='store_true', default=False, help='')
    parser.add_argument('cloud', metavar='CLOUD', type=str, help='The name of the system to be provisioned.')
    parser.add_argument('series', metavar='SERIES', type=str, help='The name of the system to be provisioned.')
    parser.add_argument('tests', metavar='TESTS', type=str, help='')

    args = parser.parse_args()

    # If logging parameters were set on the command line, handle them
    # here.
    #
    if args.debug:
        log_format = "%(levelname)s - %(message)s"
        basicConfig(level=DEBUG, format=log_format)
        Clog.dbg = True
    else:
        log_format = "%(message)s"
        basicConfig(level=WARNING, format=log_format)

    center('__main__')
    try:
        app = CloudJobFactory(args.cloud, args.series, args.tests)
        retval = app.main()
    except KeyboardInterrupt:
        pass

    cleave('__main__ (%s)' % (retval))
    exit(retval)

# vi:set ts=4 sw=4 expandtab syntax=python:
