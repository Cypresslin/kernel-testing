#!/usr/bin/env python3
#

import re
from argparse                           import ArgumentParser, RawDescriptionHelpFormatter
from logging                            import basicConfig, DEBUG, WARNING

from jenkinsapi.jenkins                 import Jenkins
from lib3.shell                         import sh

# CloudJobFactory
#
class CloudJobFactory(object):
    '''
    '''

    # __init__
    #
    def __init__(s):
        '''
        '''
        # Determine the local ip address by processing the results from "ip address"
        #
        ip = 'bogus'
        cmd = 'ip address'
        retval, output = sh(cmd, quiet=True)
        for line in output:
            m = re.search('inet (\d+\.\d+\.\d+\.\d+)\/\d+ brd \d+\.\d+\.\d+\.\d+ scope', line)
            if m:
                ip = m.group(1)
                break

        s.jenkins_url_default = "http://%s:8080" % ip
        s.jenkins = Jenkins(s.jenkins_url_default)

    # main
    #
    def main(s, args):
        retval = 0

        for name, instance in s.jenkins.get_jobs():
            print(name)

        return retval

if __name__ == '__main__':
    retval = -1

    # Command line argument setup and initial processing
    #
    app_description = '''
    '''
    app_epilog = '''
    '''
    parser = ArgumentParser(description=app_description, epilog=app_epilog, formatter_class=RawDescriptionHelpFormatter)
    parser.add_argument('--debug', action='store_true', default=False, help='')

    args = parser.parse_args()

    # If logging parameters were set on the command line, handle them
    # here.
    #
    if args.debug:
        log_format = "%(levelname)s - %(message)s"
        basicConfig(level=DEBUG, format=log_format)
    else:
        log_format = "%(message)s"
        basicConfig(level=WARNING, format=log_format)

    try:
        app = CloudJobFactory()
        retval = app.main(args)
    except KeyboardInterrupt:
        pass

    exit(retval)

# vi:set ts=4 sw=4 expandtab syntax=python:
