#!/usr/bin/env python
#

from os                                 import getenv
from argparse                           import ArgumentParser, RawDescriptionHelpFormatter
from logging                            import error, basicConfig, INFO, DEBUG
from lib.poster.encode                  import multipart_encode
from lib.poster.streaminghttp           import register_openers
import urllib2

# DBInfo
#
class DBInfo():
    '''
    '''

    # __init__
    #
    def __init__(self, args):
        self.args = args

    # main
    #
    def main(self):
        retval = 1
        try:
            # Register the streaming http handlers with urllib2
            register_openers()

            # Start the multipart/form-data encoding of the file "DSC0001.jpg"
            # "image1" is the name of the parameter, which is normally set
            # via the "name" parameter of the HTML <input> tag.

            # headers contains the necessary Content-Type and Content-Length
            # datagen is a generator object that yields the encoded parameters
            datagen, headers = multipart_encode({"uploadfile": open(self.args.target[0])})

            # Create the Request object
            request = urllib2.Request("http://10.97.9.20:3000/upload", datagen, headers)
            # Actually do the request, and get the response
            print urllib2.urlopen(request).read()

            retval = 0

        # Handle the user presses <ctrl-C>.
        #
        except KeyboardInterrupt:
            print("Aborting ...")

        if retval > 0:
            error("")
            error("Due to the above error(s), this script is unable to continue and is terminating.")
            error("")

        return retval

if __name__ == '__main__':
    if getenv('DEBUG'):
        LOGLEVEL = DEBUG
    else:
        LOGLEVEL = INFO
    LOGLEVEL = DEBUG
    basicConfig(level=LOGLEVEL, format="%(levelname)s - %(message)s")

    app_description = '''
    '''
    app_epilog = '''
    '''
    parser = ArgumentParser(description=app_description, epilog=app_epilog, formatter_class=RawDescriptionHelpFormatter)
    parser.add_argument('target', metavar='TARGET', type=str, nargs=1, help='The file to be uploaded.')
    args = parser.parse_args()

    app = DBInfo(args)
    exit(app.main())

# vi:set ts=4 sw=4 expandtab syntax=python:
